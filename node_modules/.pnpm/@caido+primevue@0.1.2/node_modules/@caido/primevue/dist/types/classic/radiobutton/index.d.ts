declare const _default: {
    root: {
        class: string[];
    };
    box: ({ props, context }: {
        props: any;
        context: any;
    }) => {
        class: (string | {
            'text-surface-700 dark:text-white/80': any;
            'border-surface-300 dark:border-surface-700': boolean;
            'border-primary bg-primary': any;
            'border-red-500 dark:border-red-400'?: undefined;
            'peer-hover:border-surface-400 dark:peer-hover:border-surface-400'?: undefined;
            'peer-hover:border-primary-emphasis'?: undefined;
            'peer-hover:[&>*:first-child]:bg-primary-600 dark:peer-hover:[&>*:first-child]:bg-primary-300'?: undefined;
            'peer-focus-visible:ring-1 peer-focus-visible:ring-primary-500 dark:peer-focus-visible:ring-primary-400'?: undefined;
            'bg-surface-200 [&>*:first-child]:bg-surface-600 dark:bg-surface-700 dark:[&>*:first-child]:bg-surface-400 border-surface-300 dark:border-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'border-red-500 dark:border-red-400': any;
            'text-surface-700 dark:text-white/80'?: undefined;
            'border-surface-300 dark:border-surface-700'?: undefined;
            'border-primary bg-primary'?: undefined;
            'peer-hover:border-surface-400 dark:peer-hover:border-surface-400'?: undefined;
            'peer-hover:border-primary-emphasis'?: undefined;
            'peer-hover:[&>*:first-child]:bg-primary-600 dark:peer-hover:[&>*:first-child]:bg-primary-300'?: undefined;
            'peer-focus-visible:ring-1 peer-focus-visible:ring-primary-500 dark:peer-focus-visible:ring-primary-400'?: undefined;
            'bg-surface-200 [&>*:first-child]:bg-surface-600 dark:bg-surface-700 dark:[&>*:first-child]:bg-surface-400 border-surface-300 dark:border-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'peer-hover:border-surface-400 dark:peer-hover:border-surface-400': boolean;
            'peer-hover:border-primary-emphasis': boolean;
            'peer-hover:[&>*:first-child]:bg-primary-600 dark:peer-hover:[&>*:first-child]:bg-primary-300': boolean;
            'peer-focus-visible:ring-1 peer-focus-visible:ring-primary-500 dark:peer-focus-visible:ring-primary-400': boolean;
            'bg-surface-200 [&>*:first-child]:bg-surface-600 dark:bg-surface-700 dark:[&>*:first-child]:bg-surface-400 border-surface-300 dark:border-surface-700 select-none pointer-events-none cursor-default': any;
            'text-surface-700 dark:text-white/80'?: undefined;
            'border-surface-300 dark:border-surface-700'?: undefined;
            'border-primary bg-primary'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
        })[];
    };
    input: {
        class: string[];
    };
    icon: ({ context }: {
        context: any;
    }) => {
        class: (string | {
            'bg-surface-0 dark:bg-surface-900': any;
            'bg-primary': boolean;
            'backface-hidden invisible scale-[0.1]': boolean;
            'transform visible translate-z-0 scale-[1,1]': any;
        })[];
    };
};
export default _default;
