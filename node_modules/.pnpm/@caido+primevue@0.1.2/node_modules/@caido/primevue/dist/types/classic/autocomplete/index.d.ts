declare const _default: {
    root: ({ props }: {
        props: any;
    }) => {
        class: (string | {
            flex: any;
            'inline-flex': boolean;
            'w-full'?: undefined;
            '[&>input]:!rounded-r-none'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'w-full': any;
            flex?: undefined;
            'inline-flex'?: undefined;
            '[&>input]:!rounded-r-none'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            '[&>input]:!rounded-r-none': any;
            flex?: undefined;
            'inline-flex'?: undefined;
            'w-full'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default': any;
            flex?: undefined;
            'inline-flex'?: undefined;
            'w-full'?: undefined;
            '[&>input]:!rounded-r-none'?: undefined;
        })[];
    };
    inputMultiple: ({ props, state }: {
        props: any;
        state: any;
    }) => {
        class: (string | {
            'bg-surface-0 dark:bg-surface-950': boolean;
            'border-surface-300 dark:border-surface-700'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-700'?: undefined;
            'outline-none outline-offset-0 z-10 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
        } | {
            'border-surface-300 dark:border-surface-700': boolean;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-700'?: undefined;
            'outline-none outline-offset-0 z-10 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
        } | {
            'border-red-500 dark:border-red-400': any;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-surface-300 dark:border-surface-700'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-700'?: undefined;
            'outline-none outline-offset-0 z-10 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
        } | {
            'hover:border-surface-400 dark:hover:border-surface-700': boolean;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-surface-300 dark:border-surface-700'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'outline-none outline-offset-0 z-10 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
        } | {
            'outline-none outline-offset-0 z-10 ring-1 ring-primary-500 dark:ring-primary-400': any;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-surface-300 dark:border-surface-700'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-700'?: undefined;
        })[];
    };
    inputToken: {
        class: string[];
    };
    inputChip: {
        class: string;
    };
    input: {
        class: string;
    };
    dropdown: {
        class: string[];
    };
    loader: {
        class: string[];
    };
    overlay: {
        class: string[];
    };
    list: {
        class: string;
    };
    option: ({ context }: {
        context: any;
    }) => {
        class: (string | {
            'bg-surface-200 dark:bg-surface-600/60': any;
            'text-surface-700 dark:text-white/80': any;
            'bg-highlight': any;
            'hover:bg-surface-100 dark:hover:bg-[rgba(255,255,255,0.03)]'?: undefined;
            'hover:bg-highlight-emphasis'?: undefined;
            'hover:text-surface-700 hover:bg-surface-100 dark:hover:text-white dark:hover:bg-[rgba(255,255,255,0.03)]'?: undefined;
        } | {
            'hover:bg-surface-100 dark:hover:bg-[rgba(255,255,255,0.03)]': boolean;
            'bg-surface-200 dark:bg-surface-600/60'?: undefined;
            'text-surface-700 dark:text-white/80'?: undefined;
            'bg-highlight'?: undefined;
            'hover:bg-highlight-emphasis'?: undefined;
            'hover:text-surface-700 hover:bg-surface-100 dark:hover:text-white dark:hover:bg-[rgba(255,255,255,0.03)]'?: undefined;
        } | {
            'hover:bg-highlight-emphasis': any;
            'bg-surface-200 dark:bg-surface-600/60'?: undefined;
            'text-surface-700 dark:text-white/80'?: undefined;
            'bg-highlight'?: undefined;
            'hover:bg-surface-100 dark:hover:bg-[rgba(255,255,255,0.03)]'?: undefined;
            'hover:text-surface-700 hover:bg-surface-100 dark:hover:text-white dark:hover:bg-[rgba(255,255,255,0.03)]'?: undefined;
        } | {
            'hover:text-surface-700 hover:bg-surface-100 dark:hover:text-white dark:hover:bg-[rgba(255,255,255,0.03)]': any;
            'bg-surface-200 dark:bg-surface-600/60'?: undefined;
            'text-surface-700 dark:text-white/80'?: undefined;
            'bg-highlight'?: undefined;
            'hover:bg-surface-100 dark:hover:bg-[rgba(255,255,255,0.03)]'?: undefined;
            'hover:bg-highlight-emphasis'?: undefined;
        })[];
    };
    optionGroup: {
        class: string[];
    };
    emptyMessage: {
        class: string[];
    };
    transition: {
        enterFromClass: string;
        enterActiveClass: string;
        leaveActiveClass: string;
        leaveToClass: string;
    };
};
export default _default;
