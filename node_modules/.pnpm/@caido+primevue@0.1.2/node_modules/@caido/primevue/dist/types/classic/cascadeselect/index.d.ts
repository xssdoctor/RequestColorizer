declare const _default: {
    root: ({ props, state }: {
        props: any;
        state: any;
    }) => {
        class: (string | {
            flex: any;
            'inline-flex': boolean;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-surface-300 dark:border-surface-600'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-600'?: undefined;
            'outline-none outline-offset-0 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'bg-surface-0 dark:bg-surface-950': boolean;
            flex?: undefined;
            'inline-flex'?: undefined;
            'border-surface-300 dark:border-surface-600'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-600'?: undefined;
            'outline-none outline-offset-0 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'border-surface-300 dark:border-surface-600': boolean;
            flex?: undefined;
            'inline-flex'?: undefined;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-600'?: undefined;
            'outline-none outline-offset-0 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'border-red-500 dark:border-red-400': any;
            flex?: undefined;
            'inline-flex'?: undefined;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-surface-300 dark:border-surface-600'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-600'?: undefined;
            'outline-none outline-offset-0 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'hover:border-surface-400 dark:hover:border-surface-600': boolean;
            flex?: undefined;
            'inline-flex'?: undefined;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-surface-300 dark:border-surface-600'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'outline-none outline-offset-0 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'outline-none outline-offset-0 ring-1 ring-primary-500 dark:ring-primary-400': any;
            flex?: undefined;
            'inline-flex'?: undefined;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-surface-300 dark:border-surface-600'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-600'?: undefined;
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default'?: undefined;
        } | {
            'bg-surface-200 dark:bg-surface-700 select-none pointer-events-none cursor-default': any;
            flex?: undefined;
            'inline-flex'?: undefined;
            'bg-surface-0 dark:bg-surface-950'?: undefined;
            'border-surface-300 dark:border-surface-600'?: undefined;
            'border-red-500 dark:border-red-400'?: undefined;
            'hover:border-surface-400 dark:hover:border-surface-600'?: undefined;
            'outline-none outline-offset-0 ring-1 ring-primary-500 dark:ring-primary-400'?: undefined;
        })[];
    };
    label: ({ props, parent }: {
        props: any;
        parent: any;
    }) => {
        class: (string | {
            'text-surface-800 dark:text-white/80': boolean;
            'text-surface-400 dark:text-surface-500': boolean;
            'placeholder:text-transparent dark:placeholder:text-transparent'?: undefined;
            '!text-transparent dark:!text-transparent'?: undefined;
            'pr-7'?: undefined;
            filled?: undefined;
        } | {
            'placeholder:text-transparent dark:placeholder:text-transparent': boolean;
            '!text-transparent dark:!text-transparent': boolean;
            'text-surface-800 dark:text-white/80'?: undefined;
            'text-surface-400 dark:text-surface-500'?: undefined;
            'pr-7'?: undefined;
            filled?: undefined;
        } | {
            'pr-7': any;
            'text-surface-800 dark:text-white/80'?: undefined;
            'text-surface-400 dark:text-surface-500'?: undefined;
            'placeholder:text-transparent dark:placeholder:text-transparent'?: undefined;
            '!text-transparent dark:!text-transparent'?: undefined;
            filled?: undefined;
        } | {
            filled: boolean;
            'text-surface-800 dark:text-white/80'?: undefined;
            'text-surface-400 dark:text-surface-500'?: undefined;
            'placeholder:text-transparent dark:placeholder:text-transparent'?: undefined;
            '!text-transparent dark:!text-transparent'?: undefined;
            'pr-7'?: undefined;
        })[];
    };
    dropdown: {
        class: string[];
    };
    overlay: {
        class: string[];
    };
    list: {
        class: string;
    };
    option: ({ context }: {
        context: any;
    }) => {
        class: (string | {
            'text-surface-500 dark:text-white/70': boolean;
            'text-surface-500 dark:text-white/70 bg-surface-200 dark:bg-surface-600/90': any;
            'bg-highlight text-highlight-contrast': any;
            'hover:bg-surface-100 dark:hover:bg-[rgba(255,255,255,0.03)]'?: undefined;
            'hover:bg-highlight-emphasis'?: undefined;
            'opacity-60 pointer-events-none cursor-default'?: undefined;
        } | {
            'hover:bg-surface-100 dark:hover:bg-[rgba(255,255,255,0.03)]': boolean;
            'hover:bg-highlight-emphasis': any;
            'text-surface-500 dark:text-white/70'?: undefined;
            'text-surface-500 dark:text-white/70 bg-surface-200 dark:bg-surface-600/90'?: undefined;
            'bg-highlight text-highlight-contrast'?: undefined;
            'opacity-60 pointer-events-none cursor-default'?: undefined;
        } | {
            'opacity-60 pointer-events-none cursor-default': any;
            'text-surface-500 dark:text-white/70'?: undefined;
            'text-surface-500 dark:text-white/70 bg-surface-200 dark:bg-surface-600/90'?: undefined;
            'bg-highlight text-highlight-contrast'?: undefined;
            'hover:bg-surface-100 dark:hover:bg-[rgba(255,255,255,0.03)]'?: undefined;
            'hover:bg-highlight-emphasis'?: undefined;
        })[];
    };
    optionContent: {
        class: string[];
    };
    groupIcon: {
        class: string[];
    };
    optionList: {
        class: string[];
    };
    transition: {
        enterFromClass: string;
        enterActiveClass: string;
        leaveActiveClass: string;
        leaveToClass: string;
    };
};
export default _default;
