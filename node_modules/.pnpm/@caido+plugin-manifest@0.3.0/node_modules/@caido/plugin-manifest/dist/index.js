// src/index.ts
import { Ajv } from "ajv";

// src/schema.json
var schema_default = {
  $schema: "http://json-schema.org/draft-07/schema#",
  title: "Schema",
  allOf: [
    {
      $ref: "#/definitions/Manifest"
    }
  ],
  definitions: {
    Manifest: {
      type: "object",
      required: [
        "id",
        "plugins",
        "version"
      ],
      properties: {
        author: {
          anyOf: [
            {
              $ref: "#/definitions/ManifestAuthor"
            },
            {
              type: "null"
            }
          ]
        },
        description: {
          type: [
            "string",
            "null"
          ]
        },
        id: {
          $ref: "#/definitions/ManifestID"
        },
        links: {
          anyOf: [
            {
              $ref: "#/definitions/ManifestLinks"
            },
            {
              type: "null"
            }
          ]
        },
        name: {
          type: [
            "string",
            "null"
          ]
        },
        plugins: {
          type: "array",
          items: {
            $ref: "#/definitions/ManifestPlugin"
          }
        },
        version: {
          type: "string"
        }
      }
    },
    ManifestAuthor: {
      type: "object",
      properties: {
        email: {
          type: [
            "string",
            "null"
          ]
        },
        name: {
          type: [
            "string",
            "null"
          ]
        },
        url: {
          type: [
            "string",
            "null"
          ],
          format: "uri"
        }
      }
    },
    ManifestBackendPluginRuntime: {
      type: "string",
      enum: [
        "javascript"
      ]
    },
    ManifestFrontendPluginConnection: {
      type: "object",
      required: [
        "id"
      ],
      properties: {
        id: {
          $ref: "#/definitions/ManifestID"
        }
      }
    },
    ManifestID: {
      type: "string"
    },
    ManifestLinks: {
      type: "object",
      properties: {
        sponsor: {
          type: [
            "string",
            "null"
          ],
          format: "uri"
        }
      }
    },
    ManifestPlugin: {
      oneOf: [
        {
          type: "object",
          required: [
            "id",
            "kind"
          ],
          properties: {
            assets: {
              type: [
                "string",
                "null"
              ]
            },
            backend: {
              anyOf: [
                {
                  $ref: "#/definitions/ManifestFrontendPluginConnection"
                },
                {
                  type: "null"
                }
              ]
            },
            entrypoint: {
              type: [
                "string",
                "null"
              ]
            },
            id: {
              $ref: "#/definitions/ManifestID"
            },
            kind: {
              type: "string",
              enum: [
                "frontend"
              ]
            },
            name: {
              type: [
                "string",
                "null"
              ]
            },
            style: {
              type: [
                "string",
                "null"
              ]
            }
          }
        },
        {
          type: "object",
          required: [
            "entrypoint",
            "id",
            "kind",
            "runtime"
          ],
          properties: {
            assets: {
              type: [
                "string",
                "null"
              ]
            },
            entrypoint: {
              type: "string"
            },
            id: {
              $ref: "#/definitions/ManifestID"
            },
            kind: {
              type: "string",
              enum: [
                "backend"
              ]
            },
            name: {
              type: [
                "string",
                "null"
              ]
            },
            runtime: {
              $ref: "#/definitions/ManifestBackendPluginRuntime"
            }
          }
        },
        {
          type: "object",
          required: [
            "definition",
            "id",
            "kind"
          ],
          properties: {
            definition: {
              type: "string"
            },
            id: {
              $ref: "#/definitions/ManifestID"
            },
            kind: {
              type: "string",
              enum: [
                "workflow"
              ]
            },
            name: {
              type: [
                "string",
                "null"
              ]
            }
          }
        }
      ]
    }
  }
};

// src/index.ts
var ajv = new Ajv();
ajv.addFormat(
  "uri",
  /^(https?:\/\/)?([\da-z-]+\.)+([a-z]{2,6})([/\w .-]*)*\/?$/i
);
function validateManifest(data) {
  console.log("[*] Validating manifest data");
  const validate = ajv.compile(schema_default);
  const valid = validate(data);
  if (!valid) {
    console.log(`[-] Errors: ${JSON.stringify(validate.errors, null, 2)}`);
    return false;
  }
  return true;
}
export {
  validateManifest
};
//# sourceMappingURL=index.js.map